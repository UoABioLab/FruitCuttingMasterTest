(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=t(i);fetch(i.href,a)}})();class u{constructor(e,t,s,i,a,n){this.fruitInitialSpeed=e,this.spawnPositionRatio=t,this.intervalTime=s,this.gravity=i,this.scoreThreshold=a,this.squatRatio=n}calculateSpawnPosition(e){return Math.floor(e*this.spawnPositionRatio)}}const p={easy:new u(6,.15,2,.05,8,.9),medium:new u(7,.2,1.5,.06,10,.8),hard:new u(8,.25,1.2,.07,12,.7)},g=window.Pose;class y{constructor(){this.pose=new g({locateFile:e=>`https://cdn.jsdelivr.net/npm/@mediapipe/pose/${e}`}),this.pose.setOptions({modelComplexity:1,smoothLandmarks:!0,enableSegmentation:!1,smoothSegmentation:!1,minDetectionConfidence:.5,minTrackingConfidence:.5})}async loadPoseModel(){return new Promise(e=>{this.pose.onResults(t=>{this.onResultsCallback&&this.onResultsCallback(t)}),console.log("等待姿势检测模型加载..."),setTimeout(e,5e3)})}async setupCamera(){let e=0;const t=3;for(;e<t;)try{console.log(`摄像头初始化尝试 ${e+1}/${t}`);const s=document.getElementById("webcam");s.srcObject&&(s.srcObject.getTracks().forEach(r=>r.stop()),s.srcObject=null),await new Promise(o=>setTimeout(o,1e3));const i={video:{width:320,height:240,frameRate:{ideal:30}},audio:!1},a=await navigator.mediaDevices.getUserMedia(i);return s.srcObject=a,s.style.display="block",await new Promise(o=>{s.onloadedmetadata=()=>{s.play().then(o).catch(r=>{throw console.error("视频播放失败:",r),r})}}),await new Camera(s,{onFrame:async()=>{try{await this.pose.send({image:s})}catch(o){console.error("Pose detection error:",o)}},width:320,height:240}).start(),console.log("摄像头初始化成功"),s}catch(s){if(e++,console.error(`摄像头初始化失败 (尝试 ${e}/${t}):`,s),e===t)throw new Error("摄像头初始化失败，请尝试刷新页面或检查摄像头是否被其他程序占用");await new Promise(i=>setTimeout(i,2e3))}}async reinitializePose(){try{await this.pose.close(),this.pose=new g({locateFile:e=>`https://cdn.jsdelivr.net/npm/@mediapipe/pose/${e}`}),this.pose.setOptions({modelComplexity:1,smoothLandmarks:!0,enableSegmentation:!1,smoothSegmentation:!1,minDetectionConfidence:.5,minTrackingConfidence:.5}),this.pose.onResults(e=>{try{this.onResultsCallback&&this.onResultsCallback(e)}catch(t){console.error("姿势检测结果处理错误:",t)}})}catch(e){throw console.error("重新初始化姿势检测失败:",e),e}}checkHandsJoined(e){if(!e.poseLandmarks)return!1;const t=e.poseLandmarks[15],s=e.poseLandmarks[16],i=e.poseLandmarks[13],a=e.poseLandmarks[14];if(t.visibility<.2||s.visibility<.2)return!1;const n=Math.hypot(-(t.x-s.x),t.y-s.y),o=Math.hypot(-(i.x-a.x),i.y-a.y),r=n<o*.8,l=Math.abs(t.y-s.y)<.1;return r&&l}calculateKneeAngle(e){if(!e)return 180;const t=e[24],s=e[26],i=e[28];if(t.visibility<.3||s.visibility<.3||i.visibility<.3)return 180;const a={x:Math.abs(t.x-s.x),y:t.y-s.y},n={x:Math.abs(i.x-s.x),y:i.y-s.y},o=a.x*n.x+a.y*n.y,r=Math.sqrt(a.x*a.x+a.y*a.y),h=Math.sqrt(n.x*n.x+n.y*n.y);if(r===0||h===0)return 180;const l=Math.acos(o/(r*h))*180/Math.PI;return this.lastAngle?this.lastAngle=this.lastAngle*(1-.3)+l*.3:this.lastAngle=l,this.lastAngle}checkSquat(e,t){if(!e.poseLandmarks)return!1;const s=this.calculateKneeAngle(e.poseLandmarks),a={easy:165,medium:150,hard:135}[t]||165;if(!this.lastSquatState)this.lastSquatState=s<=a;else{const n=s<=a;n!==this.lastSquatState?(this.squatStateCount||(this.squatStateCount=0),this.squatStateCount++,this.squatStateCount>=3&&(this.lastSquatState=n,this.squatStateCount=0)):this.squatStateCount=0}return this.lastSquatState}drawSkeleton(e,t,s,i){if(t.poseLandmarks){e.clearRect(0,0,s,i),e.strokeStyle="rgba(0, 255, 0, 0.8)",e.lineWidth=3;for(const a of POSE_CONNECTIONS){const n=t.poseLandmarks[a[0]],o=t.poseLandmarks[a[1]];n.visibility>.5&&o.visibility>.5&&(e.beginPath(),e.moveTo(n.x*s,n.y*i),e.lineTo(o.x*s,o.y*i),e.stroke())}e.fillStyle="rgba(255, 0, 0, 0.8)",t.poseLandmarks.forEach(a=>{a.visibility>.5&&(e.beginPath(),e.arc(a.x*s,a.y*i,5,0,2*Math.PI),e.fill())})}}}class f{constructor(e,t,s,i,a,n){this.image=i[Math.floor(Math.random()*i.length)];const o=Math.min(window.innerWidth,window.innerHeight)/1e3;this.width=Math.floor(120*o),this.height=Math.floor(120*o),this.x=Math.random()*(t*2)+(e-t),this.y=s,this.speedY=-a,this.gravity=n}update(){return this.speedY+=this.gravity,this.y+=this.speedY,this.y<=window.innerHeight}draw(e){e.drawImage(this.image,this.x-this.width/2,this.y-this.height/2,this.width,this.height)}checkCollision(e,t){return e>=this.x-this.width/2&&e<=this.x+this.width/2&&t>=this.y-this.height/2&&t<=this.y+this.height/2}}const w={en:{title:"Bubble Pop Kung Fu",start:"Start Game",back:"Back to Menu",gameOver:"Game Over!",finalScore:"Final Score",selectDifficulty:"Select Difficulty:",easy:"Easy",medium:"Medium",hard:"Hard",retry:"Retry",error:"Game start failed, please try again",calibrate:"Please maintain a standing position",score:"Score",lives:"Lives",balloons:"Balloons",remaining:"Remaining Repetitions"},zh:{title:"泡泡功夫",start:"开始游戏",back:"返回菜单",gameOver:"游戏结束！",finalScore:"最终得分",selectDifficulty:"选择难度：",easy:"简单",medium:"中等",hard:"困难",retry:"重试",error:"游戏启动失败，请重试",calibrate:"请保持站立姿势",score:"分数",lives:"生命值",balloons:"气球个数",remaining:"剩余次数"}},v=localStorage.getItem("language")||"en";function d(c){var e;return((e=w[v])==null?void 0:e[c])||c}class b{constructor(){this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.poseCanvas=document.getElementById("poseCanvas"),this.poseCtx=this.poseCanvas.getContext("2d"),this.score=0,this.life=3,this.fruits=[],this.lastFruitTime=0,this.gameOver=!1,this.numberToComplete=0,this.poseDetection=new y,this.settings=null,this.baselineDistance=null,this.poseDetectionInitialized=!1,this.setupEventListeners(),window.addEventListener("resize",()=>{this.resizeCanvas()}),this.resizeCanvas()}async initializePoseDetection(){try{const e=await this.poseDetection.setupCamera();this.poseDetection.pose.onResults(t=>{this.poseResults=t}),this.poseDetectionInitialized=!0,document.getElementById("webcam").style.display="none",document.getElementById("poseCanvas").style.display="none"}catch(e){throw console.error("姿势检测初始化失败:",e),alert(e.message||"摄像头初始化失败，请确保允许使用摄像头并关闭其他使用摄像头的应用"),e}}async start(e){this.difficulty=e,this.settings=p[e],this.numberToComplete=this.settings.scoreThreshold,document.getElementById("difficultyScreen").classList.add("hidden"),document.getElementById("gameScreen").classList.remove("hidden"),this.resizeCanvas();try{this.showLoadingMessage("Initializing game..."),await this.loadResources(),document.getElementById("webcam").style.display="block",document.getElementById("poseCanvas").style.display="block",this.hideLoadingMessage(),await this.showCountdown(),await this.calibrate(),this.gameLoop()}catch(t){console.error("游戏启动失败:",t),await this.showErrorDialog(t.message)}}resizeCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.poseCanvas.width=250,this.poseCanvas.height=187.5,this.gameOver||this.fruits.forEach(e=>{e.x=Math.min(Math.max(e.x,0),this.canvas.width),e.y=Math.min(Math.max(e.y,0),this.canvas.height)})}setupEventListeners(){window.addEventListener("resize",()=>this.resizeCanvas()),document.getElementById("restartButton").addEventListener("click",()=>this.restart()),document.getElementById("homeButton").addEventListener("click",()=>this.returnToHome())}async restart(){this.score=0,this.life=3,this.fruits=[],this.lastFruitTime=0,this.gameOver=!1,this.numberToComplete=this.settings.scoreThreshold,document.getElementById("gameOverScreen").classList.add("hidden"),document.getElementById("gameScreen").classList.remove("hidden");try{this.showLoadingMessage("Preparing new game..."),document.getElementById("webcam").style.display="block",document.getElementById("poseCanvas").style.display="block",this.hideLoadingMessage(),await this.showCountdown(),await this.calibrate(),this.gameLoop()}catch(e){console.error("重新开始游戏失败:",e),await this.showErrorDialog(e.message)}}gameLoop(){this.gameOver||(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.updateGameObjects(),this.drawGameObjects(),this.updateUI(),requestAnimationFrame(()=>this.gameLoop()))}updateGameObjects(){const e=Date.now()/1e3;if(this.fruits.length===0&&e-this.lastFruitTime>this.settings.intervalTime){const t=this.getNosePosition(),s=this.settings.calculateSpawnPosition(this.canvas.width);this.fruits.push(new f(t,s,this.canvas.height,this.images.fruits,this.settings.fruitInitialSpeed,this.settings.gravity)),this.lastFruitTime=e}this.checkCollisionsAndUpdateFruits()}checkCollisionsAndUpdateFruits(){const e=[];for(const t of this.fruits){if(!t.update()){e.push(t),this.life--,this.sounds.fail.play();continue}if(this.poseResults&&this.poseResults.poseLandmarks){const s=this.poseDetection.checkHandsJoined(this.poseResults),i=this.poseDetection.checkSquat(this.poseResults,this.difficulty);if(s&&i){const a=this.poseResults.poseLandmarks,n=a[15],o=a[16],r=(1-n.x)*this.canvas.width,h=(1-o.x)*this.canvas.width,l=n.y*this.canvas.height,m=o.y*this.canvas.height;console.log("手的位置:",{left:{x:r,y:l},right:{x:h,y:m}}),console.log("水果的位置:",{x:t.x,y:t.y}),(t.checkCollision(r,l)||t.checkCollision(h,m))&&(e.push(t),this.score++,this.numberToComplete--,this.sounds.succeed.play())}}}this.fruits=this.fruits.filter(t=>!e.includes(t)),(this.life<=0||this.numberToComplete<=0)&&(this.gameOver=!0,this.showGameOver())}drawGameObjects(){this.fruits.forEach(e=>e.draw(this.ctx)),this.poseResults&&this.poseResults.poseLandmarks&&this.drawPoseFeedback(),this.drawPoseDetection()}updateUI(){document.getElementById("score").textContent=`${d("score")}: ${this.score}`,document.getElementById("life").textContent=`${d("lives")}: ${this.life}`,document.getElementById("toComplete").textContent=`${d("remaining")}: ${this.numberToComplete}`}showGameOver(){document.getElementById("gameScreen").classList.add("hidden"),document.getElementById("gameOverScreen").classList.remove("hidden"),document.getElementById("finalScore").textContent=`${d("finalScore")}: ${this.score}`}getNosePosition(){return this.poseResults&&this.poseResults.poseLandmarks?this.poseResults.poseLandmarks[0].x*this.canvas.width:this.canvas.width/2}loadImage(e){return new Promise((t,s)=>{const i=new Image;i.onload=()=>t(i),i.onerror=()=>s(new Error(`Failed to load image: ${e}`)),i.src=e})}async loadResources(){try{this.images={background:await this.loadImage("resources/images/background1.jpg"),fruits:await Promise.all([this.loadImage("resources/images/fruits/apple.png"),this.loadImage("resources/images/fruits/orange.png"),this.loadImage("resources/images/fruits/pineapple.png"),this.loadImage("resources/images/fruits/strawberry.png")]),poses:{handsJoined:await this.loadImage("resources/images/poses/hands-joined.png"),prayingHands:await this.loadImage("resources/images/poses/praying-hands.png"),squat:await this.loadImage("resources/images/poses/squat.png")}},this.sounds={succeed:new Audio("resources/sounds/succeed.mp3"),fail:new Audio("resources/sounds/fail.mp3"),background:new Audio("resources/sounds/background.mp3")},this.sounds.background.loop=!0,await this.sounds.background.play().catch(e=>{console.warn("无法自动播放背景音乐:",e)})}catch(e){throw console.error("资源加载失败:",e),e}}drawPoseFeedback(){const e=this.poseResults.poseLandmarks;if(this.poseDetection.checkHandsJoined(this.poseResults)){const i=e[15],a=e[16],n=(1-(i.x+a.x)/2)*this.canvas.width,o=(i.y+a.y)/2*this.canvas.height;this.ctx.drawImage(this.images.poses.handsJoined,n-80,o-80,160,160)}else this.showFeedback("left","Please Join Hands");this.poseDetection.checkSquat(this.poseResults,this.difficulty)||this.showFeedback("right","Please Squat")}drawPoseDetection(){!this.poseResults||!this.poseResults.poseLandmarks||(this.poseCtx.clearRect(0,0,this.poseCanvas.width,this.poseCanvas.height),this.poseDetection.drawSkeleton(this.poseCtx,this.poseResults,this.poseCanvas.width,this.poseCanvas.height))}showFeedback(e,t){const s=e==="left"?this.canvas.width*.75:this.canvas.width*.25,i=this.canvas.height*.33,a=e==="left"?this.images.poses.prayingHands:this.images.poses.squat;this.ctx.drawImage(a,s-80,i-80,160,160),this.ctx.font="30px Comic Sans MS",this.ctx.fillStyle="red",this.ctx.textAlign="center",this.ctx.fillText(e==="left"?"Join Hands":"Squat Down",s,i+100)}async calibrate(){for(let e=3;e>0;e--)this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.font="48px Comic Sans MS",this.ctx.fillStyle="white",this.ctx.textAlign="center",this.ctx.fillText(`${d("calibrate")}: ${e}`,this.canvas.width/2,this.canvas.height/2),await new Promise(t=>setTimeout(t,1e3));if(this.poseResults&&this.poseResults.poseLandmarks){const e=this.poseResults.poseLandmarks,t={x:(e[11].x+e[12].x)/2,y:(e[11].y+e[12].y)/2},s={x:(e[27].x+e[28].x)/2,y:(e[27].y+e[28].y)/2};this.baselineDistance=Math.hypot(s.x-t.x,s.y-t.y)*100,console.log("Calibration completed, baseline distance:",this.baselineDistance)}else console.warn("No pose detected, using default baseline distance"),this.baselineDistance=50}async showCountdown(){const e=document.createElement("div");e.style.cssText=`
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 100px;
            color: white;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            z-index: 1000;
        `,document.body.appendChild(e);for(let t=5;t>0;t--)e.textContent=t,await new Promise(s=>setTimeout(s,1e3));e.textContent="START!",await new Promise(t=>setTimeout(t,1e3)),e.remove()}showLoadingMessage(e){let t=document.getElementById("loadingMessage");t||(t=document.createElement("div"),t.id="loadingMessage",t.style.cssText=`
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 24px;
                color: white;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
                z-index: 1000;
                background-color: rgba(0, 0, 0, 0.7);
                padding: 20px;
                border-radius: 10px;
            `,document.body.appendChild(t)),t.textContent=e}hideLoadingMessage(){const e=document.getElementById("loadingMessage");e&&e.remove()}showRetryDialog(){return new Promise(e=>{const t=document.createElement("div");t.style.cssText=`
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background: rgba(0, 0, 0, 0.9);
                padding: 20px;
                border-radius: 10px;
                color: white;
                text-align: center;
                z-index: 1001;
            `,t.innerHTML=`
                <h3>No Person Detected</h3>
                <p>Please ensure:</p>
                <ul style="text-align: left;">
                    <li>You are in front of the camera</li>
                    <li>Camera is properly connected</li>
                    <li>Lighting is adequate</li>
                </ul>
                <button onclick="this.parentElement.dataset.action='retry'" style="margin: 10px;">Retry</button>
                <button onclick="this.parentElement.dataset.action='cancel'" style="margin: 10px;">Back to Menu</button>
            `,document.body.appendChild(t),t.addEventListener("click",s=>{if(t.dataset.action){const i=t.dataset.action;t.remove(),e(i==="retry")}})})}async showErrorDialog(e){await this.showRetryDialog()?await this.start(this.settings):this.returnToMainMenu()}returnToMainMenu(){this.gameOver=!0,this.hideLoadingMessage(),document.getElementById("gameScreen").classList.add("hidden"),document.getElementById("difficultyScreen").classList.remove("hidden")}returnToHome(){this.score=0,this.life=3,this.fruits=[],this.lastFruitTime=0,this.gameOver=!1,this.numberToComplete=0,document.getElementById("gameOverScreen").classList.add("hidden"),document.getElementById("gameScreen").classList.add("hidden"),document.getElementById("webcam").style.display="none",document.getElementById("poseCanvas").style.display="none",document.getElementById("difficultyScreen").classList.remove("hidden"),document.getElementById("difficultySelect").value=""}}document.addEventListener("DOMContentLoaded",async()=>{const c=new b;try{await c.initializePoseDetection(),console.log("姿势检测初始化成功")}catch(e){console.error("姿势检测初始化失败:",e),alert("摄像头初始化失败，请确保允许使用摄像头并刷新页面")}document.getElementById("startButton").addEventListener("click",()=>{const e=document.getElementById("difficultySelect").value;e?c.start(e):alert("请选择难度")}),document.getElementById("exitButton").addEventListener("click",()=>{const e=document.referrer;if(e)window.location.href=e;else{const t=location.hostname==="localhost"||location.hostname==="127.0.0.1",s=location.pathname.split("/")[1],i=t?"/GameIndex/index.html":`https://${location.hostname}/${s}/`;window.location.href=i}})});
